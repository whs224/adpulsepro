
import React from 'react';
import { Document, Page, Text, View, StyleSheet, Image, Font } from '@react-pdf/renderer';

// Register fonts for better typography
Font.register({
  family: 'Inter',
  src: 'https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuLyfAZ9hiA.woff2'
});

const styles = StyleSheet.create({
  page: {
    fontFamily: 'Inter',
    padding: 40,
    backgroundColor: '#ffffff',
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 30,
    paddingBottom: 20,
    borderBottom: '2 solid #e5e7eb',
  },
  logo: {
    width: 120,
    height: 40,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#1f2937',
    marginBottom: 8,
  },
  subtitle: {
    fontSize: 14,
    color: '#6b7280',
    marginBottom: 4,
  },
  section: {
    marginBottom: 25,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#1f2937',
    marginBottom: 15,
    paddingBottom: 8,
    borderBottom: '1 solid #e5e7eb',
  },
  metricsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 15,
  },
  metricCard: {
    width: '48%',
    padding: 15,
    backgroundColor: '#f9fafb',
    borderRadius: 8,
    border: '1 solid #e5e7eb',
  },
  metricValue: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#1f2937',
    marginBottom: 4,
  },
  metricLabel: {
    fontSize: 12,
    color: '#6b7280',
  },
  insightBox: {
    padding: 15,
    backgroundColor: '#dbeafe',
    borderRadius: 8,
    marginBottom: 15,
    borderLeft: '4 solid #3b82f6',
  },
  insightTitle: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#1e40af',
    marginBottom: 5,
  },
  insightText: {
    fontSize: 12,
    color: '#1e40af',
    lineHeight: 1.4,
  },
  table: {
    marginTop: 15,
  },
  tableHeader: {
    flexDirection: 'row',
    backgroundColor: '#f3f4f6',
    padding: 10,
    borderRadius: '4 4 0 0',
  },
  tableRow: {
    flexDirection: 'row',
    padding: 10,
    borderBottom: '1 solid #e5e7eb',
  },
  tableCell: {
    flex: 1,
    fontSize: 10,
    color: '#374151',
  },
  tableCellHeader: {
    flex: 1,
    fontSize: 10,
    fontWeight: 'bold',
    color: '#1f2937',
  },
  footer: {
    position: 'absolute',
    bottom: 30,
    left: 40,
    right: 40,
    textAlign: 'center',
    fontSize: 10,
    color: '#9ca3af',
    borderTop: '1 solid #e5e7eb',
    paddingTop: 15,
  },
});

interface ReportData {
  user: {
    name: string;
    email: string;
  };
  dateRange: string;
  metrics: {
    totalSpend: number;
    totalImpressions: number;
    totalClicks: number;
    totalConversions: number;
    avgCTR: number;
    avgCPC: number;
    avgCPA: number;
    avgROAS: number;
  };
  campaigns: Array<{
    name: string;
    spend: number;
    impressions: number;
    ctr: number;
    conversions: number;
    roas: number;
  }>;
  recommendations: string[];
}

export const ReportPDFTemplate = ({ data }: { data: ReportData }) => (
  <Document>
    <Page size="A4" style={styles.page}>
      {/* Header */}
      <View style={styles.header}>
        <View>
          <Image
            style={styles.logo}
            src="/lovable-uploads/ccada74d-80a1-45de-9c91-c3e558e1ff87.png"
          />
        </View>
        <View style={{ textAlign: 'right' }}>
          <Text style={styles.title}>Ad Performance Report</Text>
          <Text style={styles.subtitle}>{data.dateRange}</Text>
          <Text style={styles.subtitle}>Generated by AdPulse</Text>
          <Text style={styles.subtitle}>{new Date().toLocaleDateString()}</Text>
        </View>
      </View>

      {/* Executive Summary */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>Executive Summary</Text>
        <View style={styles.metricsGrid}>
          <View style={styles.metricCard}>
            <Text style={styles.metricValue}>${data.metrics.totalSpend.toLocaleString()}</Text>
            <Text style={styles.metricLabel}>Total Spend</Text>
          </View>
          <View style={styles.metricCard}>
            <Text style={styles.metricValue}>{data.metrics.totalImpressions.toLocaleString()}</Text>
            <Text style={styles.metricLabel}>Total Impressions</Text>
          </View>
          <View style={styles.metricCard}>
            <Text style={styles.metricValue}>{data.metrics.totalClicks.toLocaleString()}</Text>
            <Text style={styles.metricLabel}>Total Clicks</Text>
          </View>
          <View style={styles.metricCard}>
            <Text style={styles.metricValue}>{data.metrics.totalConversions}</Text>
            <Text style={styles.metricLabel}>Total Conversions</Text>
          </View>
        </View>
        
        <View style={styles.metricsGrid}>
          <View style={styles.metricCard}>
            <Text style={styles.metricValue}>{data.metrics.avgCTR}%</Text>
            <Text style={styles.metricLabel}>Average CTR</Text>
          </View>
          <View style={styles.metricCard}>
            <Text style={styles.metricValue}>${data.metrics.avgCPC}</Text>
            <Text style={styles.metricLabel}>Average CPC</Text>
          </View>
          <View style={styles.metricCard}>
            <Text style={styles.metricValue}>${data.metrics.avgCPA}</Text>
            <Text style={styles.metricLabel}>Average CPA</Text>
          </View>
          <View style={styles.metricCard}>
            <Text style={styles.metricValue}>{data.metrics.avgROAS}x</Text>
            <Text style={styles.metricLabel}>Average ROAS</Text>
          </View>
        </View>
      </View>

      {/* AI Recommendations */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>AI-Powered Recommendations</Text>
        {data.recommendations.map((recommendation, index) => (
          <View key={index} style={styles.insightBox}>
            <Text style={styles.insightTitle}>Recommendation #{index + 1}</Text>
            <Text style={styles.insightText}>{recommendation}</Text>
          </View>
        ))}
      </View>

      {/* Campaign Performance */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>Campaign Performance</Text>
        <View style={styles.table}>
          <View style={styles.tableHeader}>
            <Text style={styles.tableCellHeader}>Campaign</Text>
            <Text style={styles.tableCellHeader}>Spend</Text>
            <Text style={styles.tableCellHeader}>Impressions</Text>
            <Text style={styles.tableCellHeader}>CTR</Text>
            <Text style={styles.tableCellHeader}>Conversions</Text>
            <Text style={styles.tableCellHeader}>ROAS</Text>
          </View>
          {data.campaigns.map((campaign, index) => (
            <View key={index} style={styles.tableRow}>
              <Text style={styles.tableCell}>{campaign.name}</Text>
              <Text style={styles.tableCell}>${campaign.spend.toLocaleString()}</Text>
              <Text style={styles.tableCell}>{campaign.impressions.toLocaleString()}</Text>
              <Text style={styles.tableCell}>{campaign.ctr}%</Text>
              <Text style={styles.tableCell}>{campaign.conversions}</Text>
              <Text style={styles.tableCell}>{campaign.roas}x</Text>
            </View>
          ))}
        </View>
      </View>

      {/* Footer */}
      <Text style={styles.footer}>
        This report was generated by AdPulse • contact@adpulse.pro • 415-317-6427
        {'\n'}Data sources: Google Ads, Meta Ads via OAuth API • All data encrypted and secure
      </Text>
    </Page>
  </Document>
);
